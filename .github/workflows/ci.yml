name: Resume Generation and Optimization Pipeline

on:
  schedule:
    - cron: '0 8 * * *'  # Runs at 00:00 PST (08:00 UTC)
  workflow_dispatch:  # Allows manual triggering

env:
  PYTHON_VERSION: '3.8'

jobs:
  run_pipeline:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Run data cleanup
      env:
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
      run: python scripts/data_cleanup.py

    - name: Generate optimized resumes
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        OPENAI_ORG: ${{ secrets.OPENAI_ORG }}
      run: python scripts/data_generate_resume.py

    - name: Upload data to MongoDB
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
        MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}
        MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
        MONGO_DB_NAME: ${{ secrets.MONGO_DB_NAME }}
        MONGO_COLLECTION_NAME: ${{ secrets.MONGO_COLLECTION_NAME }}
      run: python scripts/data_upload.py

    - name: Fine-tune model
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        OPENAI_ORG: ${{ secrets.OPENAI_ORG }}
        MONGO_URI: ${{ secrets.MONGO_URI }}
        MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}
        MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
        MONGO_DB_NAME: ${{ secrets.MONGO_DB_NAME }}
        MONGO_COLLECTION_EDITED_NAME: ${{ secrets.MONGO_COLLECTION_EDITED_NAME }}
      run: python scripts/fine_tuning.py

    - name: Notify Slack on success
      if: success()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: "Pipeline completed successfully! :rocket:"
        fields: repo,message,commit,author,action,eventName,ref,workflow
        author_name: GitHub Actions
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

    - name: Notify Slack on failure
      if: failure()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: "Pipeline failed. Please check the logs. :x:"
        fields: repo,message,commit,author,action,eventName,ref,workflow
        author_name: GitHub Actions
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}